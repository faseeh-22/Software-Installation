

 Install using the apt repository:

 Before you install Docker Engine for the first time on a new host machine, you need to set up the Docker repository. Afterward, you can install and update Docker from the repository.
 Set up the repository


    
    1.Update the apt package index and install packages to allow apt to use a repository over HTTPS:

    sudo apt-get update
    sudo apt-get install ca-certificates curl gnupg


    
    2.Add Docker's official GPG key:

    sudo install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    sudo chmod a+r /etc/apt/keyrings/docker.gpg

    
    
    3.Use the following command to set up the repository:

    echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  
  
    
    4.Update the apt package index:

    sudo apt-get update



Install Docker Engine:

    1.Install Docker Engine, containerd, and Docker Compose.

    To install the latest version, run:

    sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    
    
    2.Verify that the Docker Engine installation is successful by running the hello-world image.

    sudo docker run hello-world

    This command downloads a test image and runs it in a container. When the container runs, it prints a confirmation message and exits.

    You have now successfully installed and started Docker Engine.
    
    
    
Linux post-installation steps for Docker Engine:
    
    Manage Docker as a non-root user:
    
    
    
To create the docker group and add your user:

    1.Create the docker group.

     sudo groupadd docker

    2.Add your user to the docker group.

     sudo usermod -aG docker $USER    (here add your username "fa***h")

    3.Log out and log back in so that your group membership is re-evaluated.

        
        
        If you're running Linux in a virtual machine, it may be necessary to restart the virtual machine for changes to take effect.

    
    
    4.You can also run the following command to activate the changes to groups:

     newgrp docker

    5.Verify that you can run docker commands without sudo.

     docker run hello-world

    This command downloads a test image and runs it in a container. When the container runs, it prints a message and exits.
    
    
    
 NOTE: Below are not necessary steps, but if you want to follow them, you can follow them.    
    
    
    
If you initially ran Docker CLI commands using sudo before adding your user to the docker group, you may see the following error:

 WARNING: Error loading config file: /home/user/.docker/config.json -
 stat /home/user/.docker/config.json: permission denied

 This error indicates that the permission settings for the ~/.docker/ directory are incorrect, due to having used the sudo command earlier.

 To fix this problem, either remove the ~/.docker/ directory (it's recreated automatically, but any custom settings are lost), or change its ownership and permissions using the following commands:

  sudo chown "$USER":"$USER" /home/"$USER"/.docker -R
  sudo chmod g+rwx "$HOME/.docker" -R



Configure Docker to start on boot with systemd:

 Many modern Linux distributions use systemd to manage which services start when the system boots. On Debian and Ubuntu, the Docker service starts on boot by default. 
 To automatically start Docker and containerd on boot for other Linux distributions using systemd, run the following commands:

  sudo systemctl enable docker.service
  sudo systemctl enable containerd.service

 To stop this behavior, use disable instead.

  sudo systemctl disable docker.service
  sudo systemctl disable containerd.service

    
    
  Reference:
  
  For reference, see the following webpage link:
  
  1) https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
  2) https://docs.docker.com/engine/install/linux-postinstall/  
    
    
    
    
    
    
    
    
    
